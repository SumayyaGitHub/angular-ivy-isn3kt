@import '../../../../style-variables.scss';
/* -- subheader section for filter-widget / sort-widget -- */

.dashboard_subheader {
  width: 100%;
  color: rgb(48, 45, 45);
  display: inline-flex;

  /* filter header section */
  .item-filter-widget {
    margin-right: auto;
    // font-size: small;
    font-size: 14px;
    .filter-item {
      display: inline-flex;
      flex-direction: row;
      align-items: flex-start;
      justify-content: flex-start;
      flex-basis: content;
      padding: 4px 10px;
      margin: 0px 2px;
      background-color: $menu-light;
      border: 1px solid rgb(202, 225, 247);
      border-radius: 6px;
      font-size: 14px;
      cursor: default;
      .filter-item-close {
        font-size: 10px;
        font-weight: bold;
        margin: 3px 2px 3px 10px;
        cursor: pointer;
      }
    }
  }
  /* sort header and select dropdown */
  .item-sort-widget {
    // float: right;
    margin-left: auto;
    font-size: 14px;
    .select {
      padding: 5px 10px;
      margin: 4px;
      border-color: #f1f0f0;
      border-radius: 5px;
      &:focus {
        border: 1px solid rgb(8, 130, 245);
      }
    }
  }
}
/* filter button group */
.btn-group {
  // float: right;
  margin-left: auto;
  .button {
    background-color: transparent;
    border: 1px solid transparent;
    border-radius: 5px;
    color: rgb(8, 130, 245);
    padding: 8px 28px;
    margin: 2px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 12px;
    cursor: pointer;

    &:hover {
      border: 1px solid rgb(8, 130, 245);
    }
  }
}

/* filter content */
.item-filter-container {
  /* ****** btn section bottom ****** */
  .btn-dialog {
    position: absolute;
    bottom: 0;
    right: 0;
    button {
      background-color: $btn-default; /* background */
      border: 1px solid $btn-default; /* border */

      color: $gray-900; /* text */
      padding: 10px 24px; /* Some padding */
      cursor: pointer; /* Pointer/hand icon */
      float: left; /* Float the buttons side by side */
      &.btn-default {
        background-color: $btn-default;
      }
      &.btn-primary {
        background-color: $btn-primary;
        color: $gray-100;
      }
      &:hover {
        font-weight: bold;
      }
    }
  }
  /* Clear floats (clearfix hack) */
  .btn-group:after {
    content: '';
    clear: both;
    display: table;
  }
  .btn-group button:not(:last-child) {
    border-right: none; /* Prevent double borders */
  }

  /* ****** filter-form section ****** */
  ul {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: flex-start;
    list-style: none;
    margin: 0;
    padding: 0;
    max-height: 7em;
    margin-bottom: 18px;
  }

  li {
    // background: $gray-100;
    width: 48%;
    height: 1.5em;
    margin: 0.2em;
    // box-sizing: border-box;
  }
  /* The container */
  .container {
    display: block;
    position: relative;
    padding-left: 30px;
    padding-top: 7px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 14px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  /* Hide the browser's default checkbox */
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 5px;
    left: 0;
    height: 20px;
    width: 20px;
    background-color: #eee;
    border: 1px solid $gray-100;
    padding: 2px;
    border-radius: 3px;
    box-sizing: border-box;
  }

  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: #ccc;
  }

  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: $btn-primary;
    border-radius: 4px;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: '';
    position: absolute;
    display: none;
  }

  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the checkmark/indicator */
  .container .checkmark:after {
    left: 6px;
    top: 2px;
    width: 3px;
    height: 9px;
    border: solid white;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }
  /* filter-type-side-menu side menu for mobile */
  .filter-type-side-menu {
    display: none;
    border-top: 1px solid $gray-300;
    .navbar {
      width: 30%;
      height: calc(100vh - 150px);
      overflow: none;
      background: $menu-light;
      margin-left: -10px;
      a {
        display: flex;
        padding: 13px;
        color: $gray-900;
        text-decoration: none;
        font-size: 16px;
        &.active {
          font-weight: bold;
        }
        &:hover,
        &:focus {
          background-color: $theme-overlay;
        }
      }
    }
  }
}

@media screen and (max-width: 500px) {
  .item-filter-container {
    .btn-dialog {
      position: absolute;
      bottom: 8px;
      button {
        padding: 14px 24px; /* Some padding */
        font-size: 14px;
      }
    }
    li {
      // background: $gray-100;
      width: 78%;
    }
    .filter-type-side-menu {
      display: flex;
    }
    .filter-list:not(.active) {
      display: none;
    }
    .filter-list.active {
      position: absolute;
      top: 20%;
      left: 32%;
      > label {
        display: none;
      }
    }
    .filter-list.active > label {
      display: none;
    }
  }
  .item-filter-widget,
  .item-sort-widget > label {
    display: none;
  }
}
